<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on midsci-blog</title>
        <link>https://midsci.github.io/posts/</link>
        <description>Recent content in Posts on midsci-blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <copyright>&lt;a href=&#34;https://opensource.org/licenses/MIT&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT License&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 24 Sep 2022 23:42:53 +0900</lastBuildDate>
        <atom:link href="https://midsci.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Spotify Chart のスクレイピング</title>
            <link>https://midsci.github.io/posts/2022/09/spotify-chart-%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0/</link>
            <pubDate>Sat, 24 Sep 2022 23:42:53 +0900</pubDate>
            
            <guid>https://midsci.github.io/posts/2022/09/spotify-chart-%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0/</guid>
            <description>はじめに 本記事では、Google Chrome を操作するための Python のライブラリ selenium を用いて、Spotify Chart から約過去5年分の流行曲の情報をスクレイピングします。
Spotify Charts Spotify Chart をご存じの方は読み飛ばしていただいて構いません。 Spotify Chart とは、音楽ストリーミングサービス Spotify が提供する、同サービス内で再生された回数や、他のSNS等でシェアされた回数を基に作った、独自のランキングデータです。 集計する時間単位、また集計方法で、それぞれ２種類あるので紹介します。
時間単位 ランキングを集計するにあたり、Spotify では、日付ベースと週ベースで集約を行っているようです。 ここで、日付ベースのことを daily、週ベースのことを weekly と呼ぶことにします。
注意点として、本記事では、ブラウザ上でページに存在するダウンロードボタンを押す動作を Python で実装します。 ただ、weekly データに関してはページ上にダウンロードボタンが存在しないため、この記事の内容では weekly データをスクレイピングすることはできません！
集計方法 Spotify では、ランキングを作成する手法として、再生数ベースのものと、SNS等でシェアされた回数を基に決定する手法の２通りのランキングを公開しています。 再生数ベースのものは、単純にその当時流行している音楽や、今現在流行している音楽についての情報をえるのに有用だと考えられます。 一方で、SNS等のシェアベースのランキングではこれから流行るであろう音楽の探索に有用だと考えられます。
再生数ベースのランキングを regional (再生数のカウントが地域ないし、各国コードで行われているため)、またSNS等でのシェアベースのランキングを viral と呼びます。
これら２つを組み合わせて、例えば、「過去の viral→regionalに出現する音楽の傾向」をうまくモデリングすることで、これから流行する音楽の予測モデルができたりするのではないでしょうか。
エリアについて Spotify がサービスを提供しているのはもちろん日本だけではありません。 Spotify Chart 内で日本の国コードが jp であるように、他の国に関するデータも取得することができます。 また、 global という国コードを指定すると（実際には国コードではないが）全世界でのランキングを取得することができます。
本記事では、簡単のため、日本のデータに限ってスクレイピングを行います。
手法 方法としては至ってシンプルです。 Google Chrome で 「Spotify Chart のサイトを開き、ログインをし、自動でランキングデータを取得する。」という流れを愚直に実装します。
以下に必要なパッケージを示します。 不足している場合は適宜インストールしましょう。
# パッケージのインポート import time import datetime from selenium import webdriver from selenium.</description>
            <content type="html"><![CDATA[<h2 id="はじめに">はじめに</h2>
<p>本記事では、Google Chrome を操作するための <code>Python</code> のライブラリ <code>selenium</code> を用いて、<code>Spotify Chart</code> から約過去5年分の流行曲の情報をスクレイピングします。</p>
<h2 id="spotify-charts">Spotify Charts</h2>
<p><code>Spotify Chart</code> をご存じの方は読み飛ばしていただいて構いません。
<code>Spotify Chart</code> とは、音楽ストリーミングサービス <code>Spotify</code> が提供する、同サービス内で再生された回数や、他のSNS等でシェアされた回数を基に作った、独自のランキングデータです。
集計する時間単位、また集計方法で、それぞれ２種類あるので紹介します。</p>
<p><strong>時間単位</strong>
ランキングを集計するにあたり、<code>Spotify</code> では、日付ベースと週ベースで集約を行っているようです。
ここで、日付ベースのことを <code>daily</code>、週ベースのことを <code>weekly</code> と呼ぶことにします。</p>
<hr>
<p>注意点として、本記事では、ブラウザ上でページに存在するダウンロードボタンを押す動作を <code>Python</code> で実装します。
ただ、<code>weekly</code> データに関してはページ上にダウンロードボタンが存在しないため、この記事の内容では <code>weekly</code> データをスクレイピングすることはできません！</p>
<hr>
<p><strong>集計方法</strong>
<code>Spotify</code> では、ランキングを作成する手法として、再生数ベースのものと、SNS等でシェアされた回数を基に決定する手法の２通りのランキングを公開しています。
再生数ベースのものは、単純にその当時流行している音楽や、今現在流行している音楽についての情報をえるのに有用だと考えられます。
一方で、SNS等のシェアベースのランキングではこれから流行るであろう音楽の探索に有用だと考えられます。</p>
<p>再生数ベースのランキングを <code>regional</code> (再生数のカウントが地域ないし、各国コードで行われているため)、またSNS等でのシェアベースのランキングを <code>viral</code> と呼びます。</p>
<p>これら２つを組み合わせて、例えば、「過去の <code>viral</code>→<code>regional</code>に出現する音楽の傾向」をうまくモデリングすることで、これから流行する音楽の予測モデルができたりするのではないでしょうか。</p>
<h3 id="エリアについて">エリアについて</h3>
<p><code>Spotify</code> がサービスを提供しているのはもちろん日本だけではありません。
<code>Spotify Chart</code> 内で日本の国コードが <code>jp</code> であるように、他の国に関するデータも取得することができます。
また、 <code>global</code> という国コードを指定すると（実際には国コードではないが）全世界でのランキングを取得することができます。</p>
<p>本記事では、簡単のため、日本のデータに限ってスクレイピングを行います。</p>
<h2 id="手法">手法</h2>
<p>方法としては至ってシンプルです。
<code>Google Chrome</code> で 「<code>Spotify Chart</code> のサイトを開き、ログインをし、自動でランキングデータを取得する。」という流れを愚直に実装します。</p>
<p>以下に必要なパッケージを示します。
不足している場合は適宜インストールしましょう。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># パッケージのインポート</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> time
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> datetime
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> selenium <span style="color:#f92672">import</span> webdriver
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> selenium.webdriver.chrome.options <span style="color:#f92672">import</span> Options
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> selenium.webdriver.common.by <span style="color:#f92672">import</span> By
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> chromedriver_binary
</span></span></code></pre></div><p>まずは、<code>Google Chrome</code> を開いて、<code>Spotify Chart</code> へアクセスします。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># option の設定</span>
</span></span><span style="display:flex;"><span>options <span style="color:#f92672">=</span> webdriver<span style="color:#f92672">.</span>chrome<span style="color:#f92672">.</span>options<span style="color:#f92672">.</span>Options()
</span></span><span style="display:flex;"><span>driver <span style="color:#f92672">=</span> webdriver<span style="color:#f92672">.</span>Chrome(options<span style="color:#f92672">=</span>options)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># spotify にログインするためのメールアドレス（アカウント名）とパスワード</span>
</span></span><span style="display:flex;"><span>LOGIN_ID <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;MAIL-ADDRESS&#39;</span>
</span></span><span style="display:flex;"><span>LOGIN_PASSWORD <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;PASSWORD&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># spotify-chart に直接遷移しようとすると</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Log in ページに飛ばされる</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>driver<span style="color:#f92672">.</span>get(<span style="color:#e6db74">&#39;https://charts.spotify.com/home&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>time<span style="color:#f92672">.</span>sleep(<span style="color:#ae81ff">1.0</span>)
</span></span></code></pre></div><p>次に、ブラウザ上でログインボタンをクリックし、ログイン用のメールアドレス、パスワードを入力し、ログインボタンを押します。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Log in ボタンをクリック</span>
</span></span><span style="display:flex;"><span>driver<span style="color:#f92672">.</span>find_element(By<span style="color:#f92672">.</span>PARTIAL_LINK_TEXT, <span style="color:#e6db74">&#34;Log in&#34;</span>)<span style="color:#f92672">.</span>click()
</span></span><span style="display:flex;"><span>time<span style="color:#f92672">.</span>sleep(<span style="color:#ae81ff">1.0</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># username を入力</span>
</span></span><span style="display:flex;"><span>driver<span style="color:#f92672">.</span>find_element(By<span style="color:#f92672">.</span>ID, <span style="color:#e6db74">&#39;login-username&#39;</span>)<span style="color:#f92672">.</span>send_keys(LOGIN_ID)
</span></span><span style="display:flex;"><span>time<span style="color:#f92672">.</span>sleep(<span style="color:#ae81ff">1.0</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># password を入力</span>
</span></span><span style="display:flex;"><span>driver<span style="color:#f92672">.</span>find_element(By<span style="color:#f92672">.</span>ID, <span style="color:#e6db74">&#39;login-password&#39;</span>)<span style="color:#f92672">.</span>send_keys(LOGIN_PASSWORD)
</span></span><span style="display:flex;"><span>time<span style="color:#f92672">.</span>sleep(<span style="color:#ae81ff">1.0</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Log in ボタンをクリック</span>
</span></span><span style="display:flex;"><span>driver<span style="color:#f92672">.</span>find_element(By<span style="color:#f92672">.</span>ID, <span style="color:#e6db74">&#39;login-button&#39;</span>)<span style="color:#f92672">.</span>click()
</span></span></code></pre></div><p>ここで、<code>Spotify</code> にログインできた状態になります。
ここからアドレス操作で、自動的にページ遷移→ランキングデータをダウンロードする、という処理を繰り返します。
日付を設定しておきます。
日付は <code>YYY-MM-DD</code> の形式で措定することができます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># スクレイピングする期間を設定</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 2017年１月１日〜現在の3日前の日付までがスクレイピング可能</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>today <span style="color:#f92672">=</span> datetime<span style="color:#f92672">.</span>date<span style="color:#f92672">.</span>today()
</span></span><span style="display:flex;"><span>end <span style="color:#f92672">=</span> today <span style="color:#f92672">-</span> datetime<span style="color:#f92672">.</span>timedelta(days<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>)
</span></span><span style="display:flex;"><span>end <span style="color:#f92672">=</span> str(end<span style="color:#f92672">.</span>year) <span style="color:#f92672">+</span> <span style="color:#e6db74">&#39;-&#39;</span> <span style="color:#f92672">+</span> str(end<span style="color:#f92672">.</span>month)<span style="color:#f92672">.</span>zfill(<span style="color:#ae81ff">2</span>) <span style="color:#f92672">+</span> <span style="color:#e6db74">&#39;-&#39;</span> <span style="color:#f92672">+</span> str(end<span style="color:#f92672">.</span>day)<span style="color:#f92672">.</span>zfill(<span style="color:#ae81ff">2</span>)
</span></span></code></pre></div><p>さらに、<code>viral</code>か<code>regional</code>を格納したリスト、国コードを指定するためのリストを定義しておきます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># 種別（region が再生数ベースのランキング、viralがSNSのシェア等ベースのランキング）</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 国名をc_namesに格納</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>r_names <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;viral&#39;</span>, <span style="color:#e6db74">&#39;regional&#39;</span>]
</span></span><span style="display:flex;"><span>c_names <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;global&#39;</span>, <span style="color:#e6db74">&#39;jp&#39;</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 以下、指定可能な国コード</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># &#39;ar&#39;, &#39;au&#39;, &#39;at&#39;, &#39;by&#39;, &#39;be&#39;, &#39;bo&#39;, &#39;br&#39;, &#39;bg&#39;, &#39;ca&#39;, &#39;cl&#39;, &#39;co&#39;, &#39;cr&#39;, </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># &#39;cy&#39;, &#39;cz&#39;, &#39;dk&#39;, &#39;do&#39;, &#39;ec&#39;, &#39;eg&#39;, &#39;sv&#39;, &#39;ee&#39;, &#39;fi&#39;, &#39;fr&#39;, &#39;de&#39;, &#39;gr&#39;,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># &#39;gt&#39;, &#39;hn&#39;, &#39;hk&#39;, &#39;hu&#39;, &#39;is&#39;, &#39;in&#39;, &#39;id&#39;, &#39;ie&#39;, &#39;il&#39;, &#39;it&#39;, &#39;jp&#39;, &#39;kz&#39;,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># &#39;lv&#39;, &#39;lt&#39;, &#39;lu&#39;, &#39;my&#39;, &#39;mx&#39;, &#39;ma&#39;, &#39;nl&#39;, &#39;nz&#39;, &#39;ni&#39;, &#39;ng&#39;, &#39;no&#39;, &#39;pk&#39;,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># &#39;pa&#39;, &#39;py&#39;, &#39;pe&#39;, &#39;ph&#39;, &#39;pl&#39;, &#39;pt&#39;, &#39;ro&#39;, &#39;sa&#39;, &#39;sg&#39;, &#39;sk&#39;, &#39;za&#39;, &#39;kr&#39;,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># &#39;es&#39;, &#39;se&#39;, &#39;ch&#39;, &#39;tw&#39;, &#39;th&#39;, &#39;tr&#39;, &#39;ae&#39;, &#39;ua&#39;, &#39;gb&#39;, &#39;uy&#39;, &#39;us&#39;, &#39;ve&#39;, &#39;vn&#39;</span>
</span></span></code></pre></div><h3 id="環境について">環境について</h3>
<p>Python を使ってスクレイピングを行います。
筆者の手元では <code>Python==3.8</code> です。
また、ログイン認証は <code>selenium</code> という、<code>Python</code> でブラウザを操作するライブラリが必須となります。
<code>selenium</code> については、手元の <code>Chrome</code> とのバージョンの整合性がとれないとエラーを吐いちゃったりするので、気をつけてインストールしてください。
これについては例えば<a href="">こちらの記事</a>が参考になります。</p>
<h3 id="コード">コード</h3>
<h3 id="コード解説">コード解説</h3>
<h3 id="スクレイピングの様子">スクレイピングの様子</h3>
<h2 id="まとめ">まとめ</h2>
<p>これまでは、<code>Spotify</code> にログインせずとも、<code>csv</code> ファイルとして、過去五年間分の <code>Spotify Chart</code> データ（週単位、もしくは日単位での<code>Spotify</code>での人気ランキング上位）を取得することが可能でした。
最近になって、</p>
]]></content>
        </item>
        
    </channel>
</rss>
