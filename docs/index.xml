<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>midsci-blog</title>
    <link>https://midsci.github.io/</link>
    <description>Recent content on midsci-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 24 Sep 2022 23:42:53 +0900</lastBuildDate><atom:link href="https://midsci.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>https://midsci.github.io/posts/2014/09/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/posts/2014/09/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://midsci.github.io/posts/2014/03/migrate-to-hugo-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/posts/2014/03/migrate-to-hugo-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Spotify Chart のスクレイピング</title>
      <link>https://midsci.github.io/posts/2022/09/spotify-chart-%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0/</link>
      <pubDate>Sat, 24 Sep 2022 23:42:53 +0900</pubDate>
      
      <guid>https://midsci.github.io/posts/2022/09/spotify-chart-%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0/</guid>
      <description>はじめに 音楽といえば、最近では生活者のほとんどが、サブスクリプションサービスに加入し、音楽を聴いています。 筆者は所謂Z世代で、ガラケーからスマホへの、CDからサブスクへの遷移を実際に体感していました。
この記事でできること この記事では、2022年のいつからかログインが必要になった Spotify Charts をスクレイピングする方法を紹介します。
Spotify Charts とは、Spotify が公開している、独自の週毎、各日毎のランキングのことで、５年前の2017年の1月1日〜現在までの期間のデータが取得可能です。
Spotify Charts エリアについて Viral データ と　Region データ 今回の記事がカバーする範囲 手法 環境について Python を使ってスクレイピングを行います。 筆者の手元では Python==3.8 です。 また、ログイン認証は selenium という、Python でブラウザを操作するライブラリが必須となります。 selenium については、手元の Chrome とのバージョンの整合性がとれないとエラーを吐いちゃったりするので、気をつけてインストールしてください。 これについては例えばこちらの記事が参考になります。
コード コード解説 スクレイピングの様子 まとめ これまでは、Spotify にログインせずとも、csv ファイルとして、過去五年間分の Spotify Chart データ（週単位、もしくは日単位でのSpotifyでの人気ランキング上位）を取得することが可能でした。 最近になって、</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://midsci.github.io/about/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/about/</guid>
      <description>運営者について
はじめまして、本サイト運営者の midsci です。
大学・大学院ではスパースモデリングであったり、統計的機械学習、MCMC法によるベイズ推論の研究を行っていました。
現在は、広告会社でデータサイエンティストとして働いております。
研究ではやってこなかった、社会の潮流を踏まえたデータ解析、データビジュアライズを行いたいという小さな野望を込めて、作りました。
本サイトの記事が読者の皆さんの何かのお役に立つことを願っております。
ご連絡先
サイトの管理はmidsciが行っております。
ご質問、ご要望、ご指摘、「こんなこと一緒にやってみたい！」などありましたら以下のTwitterにて気軽にお待ちしております。
Twitter: @midsci_blog
本サイトのソースコードについて
また、本サイトは HUGO という、Go言語の静的サイトジェネレータで作成しております。
記事の内容含めて、以下のリポジトリで公開しております。
本サイトのリポジトリ
もし読者の皆様自身が、何か情報発信したいとなった場合に、どうぞご参考になさってください。</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>https://midsci.github.io/portfolio/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/portfolio/</guid>
      <description>現在工事中…
Under construction&amp;hellip;</description>
    </item>
    
    <item>
      <title>Création d&#39;un nouveau thème</title>
      <link>https://midsci.github.io/posts/2014/09/cr%C3%A9ation-dun-nouveau-th%C3%A8me/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/posts/2014/09/cr%C3%A9ation-dun-nouveau-th%C3%A8me/</guid>
      <description>Introduction Ce tutoriel vous montrera comment créer un thème simple pour Hugo. Je suppose que vous êtes familier avec HTML, la ligne de commande bash, et que vous êtes à l&amp;rsquo;aise avec Markdown pour formater le contenu. Je vais expliquer comment Hugo utilise des modèles et comment vous pouvez organiser vos modèles pour créer un thème. Je ne couvrirai pas l&amp;rsquo;utilisation de CSS pour styliser votre thème.
Nous allons commencer par créer un nouveau site avec un modèle très basique.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://midsci.github.io/posts/2014/04/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/posts/2014/04/hugo-template-primer/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Débuter avec Hugo</title>
      <link>https://midsci.github.io/posts/2014/04/d%C3%A9buter-avec-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/posts/2014/04/d%C3%A9buter-avec-hugo/</guid>
      <description>&lt;h2 id=&#34;étape-1-installer-hugo&#34;&gt;Étape 1. Installer Hugo&lt;/h2&gt;
&lt;p&gt;Allez sur la page de téléchargements de
&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo&lt;/a&gt; et téléchargez la version
appropriée à votre système d&amp;rsquo;exploitation et votre architecture.&lt;/p&gt;
&lt;p&gt;Sauvegardez le fichier téléchargé à un endroit précis, afin de l&amp;rsquo;utiliser dans
l&amp;rsquo;étape suivante.&lt;/p&gt;
&lt;p&gt;Des informations plus complètes sont disponibles sur la page
&lt;a href=&#34;https://midsci.github.io/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://midsci.github.io/posts/2014/04/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/posts/2014/04/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Introduction aux modèles (Hu)go</title>
      <link>https://midsci.github.io/posts/2014/04/introduction-aux-mod%C3%A8les-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/posts/2014/04/introduction-aux-mod%C3%A8les-hugo/</guid>
      <description>Hugo utilise l&amp;rsquo;excellente librairie go html/template pour son moteur de modèles. c&amp;rsquo;est un moteur extrêmement léger qui offre un très petit nombre de fonctions logiques. À notre expérience, c&amp;rsquo;est juste ce qu&amp;rsquo;il faut pour créer un bon site web statique. Si vous avez déjà utilisé d&amp;rsquo;autre moteurs de modèles pour différents langages ou frameworks, vous allez retrouver beaucoup de similitudes avec les modèles go.
Ce document est une introduction sur l&amp;rsquo;utilisation de Go templates.</description>
    </item>
    
    <item>
      <title>Migrer vers Hugo depuis Jekyll</title>
      <link>https://midsci.github.io/posts/2014/03/migrer-vers-hugo-depuis-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://midsci.github.io/posts/2014/03/migrer-vers-hugo-depuis-jekyll/</guid>
      <description>&lt;h2 id=&#34;déplacez-le-contenu-statique-vers-static&#34;&gt;Déplacez le contenu statique vers &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Jekyll a une règle comme quoi tout répertoire qui ne commence pas par &lt;code&gt;_&lt;/code&gt; sera
copié tel-quel dans le répertoire &lt;code&gt;_site&lt;/code&gt;. Hugo garde tout le contenu statique
dans le répertoire &lt;code&gt;static&lt;/code&gt;. Vous devez donc déplacer tout ce type de contenu
là-dedans. Avec Jekylll, l&amp;rsquo;arborescence ressemblant à ceci :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
